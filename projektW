#pragma once
#include "producent_z.h"
#include "podorywkowy.h"

class agregat_p : public producent_z
{
public:
	virtual maszyna_z* zabuduj();
	char nazwa[10];
	float szerokosc;
	int stan;
};

#pragma once
#include "zalazek.h"
#include "byk.h"

class bydlo_o : public zalazek
{
public:
	virtual obsada* produkuj();
	
};

#pragma once
#include "obsada.h"

class byk : public obsada
{
public:
	byk();
	virtual ~byk();
	virtual void glos() {cout << "MuuuuMuuuu" << endl;}
	char nazwa[10];
	char rasa[10];
	char plec[10];
	float wiek;
	float masa;
	int stan;
};

#pragma once
#include "maszyna_s.h"

class fortschritt : public maszyna_s
{
public:
	fortschritt();
	virtual ~fortschritt();
	virtual void odglos() {cout << "bruumbruum" << endl;}
	char marka[10];
	char model[10];
	float rocznik;
	float moc;
	int stan;
};

#pragma once
#include "producent_s.h"
#include "fortschritt.h"

class kombajn_f : public producent_s
{
public:
	virtual maszyna_s* zbuduj();
	
};

#pragma once
class laka
{
public:
	laka();
	virtual ~laka();
	float powierzchnia;
	int stan;
};

#pragma once
#include "obsada.h"

class maciora : public obsada
{
public:
	maciora();
	virtual ~maciora();
	virtual void glos() {cout << "łiiiłii" << endl;}
	char nazwa[10];
	char rasa[10];
	char plec[10];
	float wiek;
	float masa;
	int stan;
};

#pragma once
#include <iostream>
using namespace std;

class maszyna_s
{
public:
	maszyna_s();
	virtual ~maszyna_s();
	virtual void odglos()=0;
	char marka[10];
	char model[10];
	float rocznik;
	float moc;
	int stan;
};

#pragma once
#include <iostream>
using namespace std;

class maszyna_z
{
public:
	maszyna_z();
	virtual ~maszyna_z();
};

#pragma once
#include <iostream>
using namespace std;

class obsada
{
public:
	obsada();
	virtual ~obsada();
	virtual void glos()=0;
	char nazwa[10];
	char rasa[10];
	char plec[10];
	float wiek;
	float masa;
	int stan;
};

#pragma once
#include "maszyna_z.h"

class podorywkowy : public maszyna_z
{
public:
	podorywkowy();
	virtual ~podorywkowy();
};

#pragma once
class pole
{
public:
	pole();
	virtual ~pole();
	float powierzchnia;
	float nrdzialki;
	char uprawa[10];
	int stan;
};

#pragma once
#include "maszyna_s.h"

class producent_s
{
public:
	virtual maszyna_s* zbuduj()=0;
	virtual ~producent_s(){}
};

#pragma once
#include "maszyna_z.h"

class producent_z
{
public:
	virtual maszyna_z* zabuduj()=0;
	virtual ~producent_z(){}
};

#pragma once
#include "producent_s.h"
#include "zetor.h"

class traktor_z :public producent_s
{
public:
	virtual maszyna_s* zbuduj();
	
};

#pragma once
#include "zalazek.h"
#include "maciora.h"

class trzoda_m : public zalazek
{
public:
	virtual obsada* produkuj();
	
};

#pragma once
#include "zalazek.h"
#include "tucznik.h"

class trzoda_t : public zalazek
{
public:
	virtual obsada* produkuj();
	
	
};

#pragma once
#include "obsada.h"

class tucznik : public obsada
{
public:
	tucznik();
	virtual ~tucznik();
	virtual void glos() {cout << "łiiiłii" << endl;}
	char nazwa[10];
	char rasa[10];
	char plec[10];
	float wiek;
	float masa;
	int stan;
};

#pragma once
#include "obsada.h"

class zalazek
{
public:
	
	virtual obsada* produkuj()=0;
	virtual ~zalazek(){}
};

#pragma once
#include "maszyna_s.h"

class zetor : public maszyna_s
{
public:
	zetor();
	virtual ~zetor();
	virtual void odglos() {cout << "bruumbruum" << endl;}
	char marka[10];
	char model[10];
	float rocznik;
	float moc;
	int stan;
};

#include <iostream>
#include <vector>
#include <ctime>
#include <cstdlib>
#include <cstring>

#include "trzoda_t.h"

#include "bydlo_o.h"
#include "trzoda_m.h"
#include "traktor_z.h"
#include "kombajn_f.h"
#include "agregat_p.h"

#include "tucznik.h"

#include "byk.h"
#include "maciora.h"
#include "zetor.h"
#include "fortschritt.h"
#include "podorywkowy.h"

using namespace std;

class wytwornia_z
{
public:
	obsada* produkuj(int w)
	{
		return zalazki.at(w) ->produkuj();
	}

	void rejestruj_zalazek(zalazek *zal)
	{
		zalazki.push_back(zal);
	}
	virtual ~wytwornia_z()
	{
		for(size_t i=0; i<zalazki.size(); ++i)
			delete zalazki.at(i);
		zalazki.clear();
	}
protected:
	vector<zalazek*> zalazki;
};

class wytwornia_ms
{
public:
	maszyna_s* zbuduj(int w)
	{
		return producenci_s.at(w) ->zbuduj();
	}

	void rejestruj_producent_s(producent_s *producents)
	{
		producenci_s.push_back(producents);
	}
	virtual ~wytwornia_ms()
	{
		for(size_t i=0; i<producenci_s.size(); ++i)
			delete producenci_s.at(i);
		producenci_s.clear();
	}
protected:
	vector<producent_s*> producenci_s;
};

class wytwornia_mz
{
public:
	maszyna_z* zabuduj(int w)
	{
		return producenci_z.at(w) ->zabuduj();
	}

	void rejestruj_producent_z(producent_z *producentz)
	{
		producenci_z.push_back(producentz);
	}
	virtual ~wytwornia_mz()
	{
		for(size_t i=0; i<producenci_z.size(); ++i)
			delete producenci_z.at(i);
		producenci_z.clear();
	}
protected:
	vector<producent_z*> producenci_z;
};


int main()
{
	char klawisz1, klawisz2, klawisz3, klawisz4, rasa[10], plec[10], nazwa[10];
	int ile, t, e=0, e_s=0;
	float wiek, masa;
	srand(time(NULL));
	wytwornia_z z;
	wytwornia_ms ms;
	wytwornia_mz mz;

	z.rejestruj_zalazek(new trzoda_t());
	z.rejestruj_zalazek(new bydlo_o());
	z.rejestruj_zalazek(new trzoda_m());

	ms.rejestruj_producent_s(new traktor_z());
	ms.rejestruj_producent_s(new kombajn_f());
	mz.rejestruj_producent_z(new agregat_p());

	
	vector<obsada*> chlew;
	vector<maszyna_s*> garaz;
	vector<maszyna_z*> wiata;
//-----------------------------------------------------------------------------
	

	do
	{
		system("cls");
		cout<<"pracuj ze zwierzetami --> 1"<<endl<<"pracuj z maszynami samojezdnymi --> 2"<<endl<<"pracuj z pozostałymi maszynami --> 3"<<endl<<"pracuj w polu --> 4"<<endl<<"stan gospodarstwa -->5"<<endl<<"wyjscie --> Q"<<endl;
		cin>>klawisz1;
		switch(klawisz1)
		{
		case '1':
				system("cls");
				cout<<"kup --> 1"<<endl<<"sprzedaj --> 2"<<endl<<"nakarm --> 3"<<endl;
				cin>>klawisz2;
				switch(klawisz2)
				{
					case '1':
							system("cls");
							ile=0;
							cout<<"Jakie zwierze chcesz kupic"<<endl;
							cout<<"tucznik --> 0 "<<endl<<"byk--> 1"<<endl<<"maciora --> 2"<<endl;
							cin>>t;
							cout<<"Ile zwierząt chcesz kupić chcesz kupić"<<endl;
							cin>>ile;
							cout<<"Podaj nazwe zwierzęcia"<<endl;
							cin>>nazwa;
							cout<<"Podaj rase zwierzęcia"<<endl;
							cin>>rasa;
							cout<<"Podaj plec [XY/ XX] zwierzęcia"<<endl;
							cin>>plec;
							cout<<"Podaj wiek [mies.] zwierzęcia"<<endl;
							cin>>wiek;
							cout<<"Podaj masa [kg] zwierzęcia"<<endl;
							cin>>masa;
							for(size_t i=0; i< ile; ++i)
							{
								chlew.push_back(z.produkuj(t));
								obsada* szt=chlew.at(e);
								strcpy(szt->nazwa, nazwa);
								strcpy(szt->rasa, rasa);
								strcpy(szt->plec, plec);
								szt->wiek=wiek;
								szt->masa=masa;
								e++;
							}	
							system("pause");
							break;
					case '2':
							system("cls");							
							cout<<"podaj nazwe zwierzecia które chcesz sprzedac"<<endl;
							cout<<"tucznik/ byk/ maciora"<<endl;
							cin>>nazwa;
							for(size_t i=0; i<chlew.size(); ++i)
							{
								obsada* szt=chlew.at(i);
								cout<<szt->nazwa;
								if(stricmp(szt->nazwa, nazwa)==0)
								{
									if(stricmp(nazwa, "tucznik")==0 || stricmp(nazwa, "maciora")==0)
									{
										if(szt->masa >= 100)
											delete chlew.at(i);
									}
									else if(stricmp(nazwa, "byk")==0)
									{
										if(szt->wiek >=24 )
											delete chlew.at(i);
									}
								}
							}
							system("pause");
/*
							for(size_t i=0; i<chlew.size(); ++i)
							{
								obsada* szt=chlew.at(i);
								cout << "glos: " <<endl;
								szt->glos();
							}

*/

							break;
					case '3':
							break;
					default:
							break;
				}
			
				break;
		case '2':
				system("cls");
				cout<<" kup --> 1"<<endl<<"sprzedaj -- >2"<<endl<<"napraw --> 3"<<endl<<""<<endl;
				cin>>klawisz3;
				switch(klawisz3)
				{
						case '1':
								system("cls");
								cout<<"Jakie maszyny samojezdne chcesz kupic"<<endl;
								cout<<"zetor--> 0"<<endl<<"fortschritt--> 1"<<endl;
								cin>>t;
								ile=0;
								cout<<"Ile maszyn samojezdnych chcesz kupić"<<endl;
								cin>>ile;
								cout<<"Podaj marke maszyny"<<endl;
								cin>>nazwa;
								cout<<"Podaj model maszyny"<<endl;
								cin>>rasa;
								cout<<"Podaj rocznik maszyny"<<endl;
								cin>>wiek;
								cout<<"Podaj moc maszyny"<<endl;
								cin>>masa;
								for(size_t i=0; i< ile; ++i)
								{
									garaz.push_back(ms.zbuduj(t));
									maszyna_s* szt=garaz.at(e_s);
									strcpy(szt->marka, nazwa);
									strcpy(szt->model, rasa);
									szt->rocznik=wiek;
									szt->moc=masa;
									e_s++;
								}
								system("pause");
								break;
						case '2':
								system("cls");
								ile=0;
								cout<<"Ile maszyn samojezdnych chcesz sprzedać"<<endl;
								cin>>ile;
								break;
						case '3':
								break;
						default:
								break;
				}
				break;
		case '3':
				system("cls");
				cout<<" kup --> 1"<<endl<<"sprzedaj -->2"<<endl<<"napraw --> 3"<<endl;
				cin>>klawisz4;
				switch(klawisz4)
				{
						case '1':
								system("cls");
								cout<<"Jakie maszyny chcesz kupic"<<endl;
								cout<<"agregat --> 0 "<<endl;
								cin>>t;
								ile=0;
								cout<<"Ile maszyn chcesz kupić"<<endl;
								cin>>ile;
								for(size_t i=0; i<ile; ++i)
								{
									wiata.push_back(mz.zabuduj(t));
								}
								system("pause");
								break;
						case '2':
								break;
						case '3':
								break;
						default:
								break;
				}
				break;
		case '4':
				break;
		case '5':
				for(size_t i=0; i<chlew.size(); ++i)
				{
					obsada* szt=chlew.at(i);
					cout<<szt->nazwa<<endl;
					cout<<szt->rasa<<endl;
					cout<<szt->plec<<endl;
					cout<<szt->wiek<<endl;
					cout<<szt->masa<<endl<<endl;
				}
				for(size_t i=0; i<garaz.size(); ++i)
				{
					maszyna_s* szt=garaz.at(i);
					cout<<szt->marka<<endl;
					cout<<szt->model<<endl;
					cout<<szt->rocznik<<endl;
					cout<<szt->moc<<endl<<endl;
				}/*
				for(size_t i=0; i<wiata.size(); ++i)
				{
					delete wiata.at(i);
					wiata.clear();
				}*/
				system("pause");
				break;
		default:
				break;
		}
	}
	while(klawisz1!='Q'  );


		for(size_t i=0; i<chlew.size(); ++i)
		{
			delete chlew.at(i);
			chlew.clear();
		}
		for(size_t i=0; i<garaz.size(); ++i)
		{
			delete garaz.at(i);
			garaz.clear();
		}
		for(size_t i=0; i<wiata.size(); ++i)
		{
			delete wiata.at(i);
			wiata.clear();
		}

	system("pause");
	return 0;
}
